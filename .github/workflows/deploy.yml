name: Deploy
env:
  environment: production
  region: us-east-1
on:
  push:
    branches: [master]
jobs:
  prepare:
    name: Prepare Deploy PythonApp
    runs-on: ubuntu-latest
    outputs:
      APPLICATION: ${{ steps.var-application.outputs.APPLICATION }}
      SHA_SHORT: ${{ steps.var-sha-short.outputs.SHA_SHORT }}
      IMAGE_VERSION: ${{ steps.var-image-version.outputs.IMAGE_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Variable SHA_SHORT
        id: var-sha-short
        run: |
          echo ::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)
      - name: Variable IMAGE_VERSION
        id: var-image-version
        run: |
          echo ::set-output name=IMAGE_VERSION::latest
      - name: Variable APPLICATION
        id: var-application
        run: |
          echo ::set-output name=APPLICATION::pythonapp
  deploy:
    name: Deploy PythonApp
    runs-on: ubuntu-latest
    needs: prepare
    outputs:
      IMAGE_TAG: ${{ steps.docker-vars.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Docker Login
        uses: docker/login-action@v1.6.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_USERNAME_PASSWORD }}
      - name: Variable IMAGE_TAG
        id: docker-vars
        run: |
          echo ::set-output name=IMAGE_TAG::ghcr.io/${{ github.repository_owner }}/${{ needs.prepare.outputs.APPLICATION }}:${{ needs.prepare.outputs.IMAGE_VERSION }}
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true
      - name: Generate Image and Push to Registry
        uses: docker/build-push-action@v2.2.0
        with:
          tags: ${{ steps.docker-vars.outputs.IMAGE_TAG }}
          context: .
          push: true
          builder: ${{ steps.buildx.outputs.name }}

